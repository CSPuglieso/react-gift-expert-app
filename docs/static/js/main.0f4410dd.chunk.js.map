{"version":3,"sources":["Components/AddCategory/AddCategory.js","helpers/getGifs.js","Components/GifGrid/GifIGridItem.js","Components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifIGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","clasName","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAwCeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAmBrC,OAEI,sBAAMC,SAbW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,8BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEAC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCsBLO,EAlBM,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAI9B,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCsBDO,EA3BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFJ,SAAEA,GAAe,IAAD,EACbd,mBAAU,CACjCqB,KAAM,GACNa,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAexC,OATAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBf,KAAMkB,EACNL,SAAS,SAElB,IAGIC,EDV0BK,CAAc1B,GAAlCa,EAHe,EAGpBN,KAAaa,EAHO,EAGPA,QAErB,OACI,qCACI,mCAAOpB,KACLoB,GAAW,mBAAGO,SAAS,wCAAZ,sBACb,qBAAKX,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BAAkBA,GAAlB,IAAwBkB,IAAKlB,EAAIC,eEO9CkB,EAvBM,SAAAC,GAAU,IAAD,EAEU5C,mBAAS,CAAC,cAFpB,mBAEnB6C,EAFmB,KAEP9C,EAFO,KAI1B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC5B,uBAGO8C,EAAWtB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCXrCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0f4410dd.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value )\n    }\n\n    const handleSubmit = ( e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2)\n        {\n            setCategories( cats => [ inputValue ,...cats]);\n            setInputValue('');\n        }\n            \n    }\n\n    return (\n        \n        <form onSubmit={handleSubmit}>  \n                \n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange}\n            ></input>\n        </form>\n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=5&api_key=QIa1RbR8VppAq0qzxrfkN3bAt4a6RFp1`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n     const gifs = data.map( img => {\n        return {\n            id: img.id, \n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })  \n\n    return gifs;\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst GifIGridItem = ({id, title, url}) => {\n\n    //console.log( {id, title, url} )\n\n    return (\n        <div className=\"card animate__animated animate__fadeInDownBig\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nGifIGridItem.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n\nexport default GifIGridItem\n","//import React, {useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useFetchGifs } from '../../hooks/useFetchGifs'\nimport GifIGridItem from './GifIGridItem';\n//import { getGifs } from '../../helpers/getGifs';\n\nconst GifGrid = ({category}) => {\n\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3> { category }</h3>  \n            { loading && <p clasName=\"card animate__animated animate__flash\"> Loading</p>}\n            <div className=\"card-grid\">\n                \n                \n                    {\n                        images.map( img => (\n                            <GifIGridItem {...img } key={img.id}/>\n                        ))\n                    }\n                       \n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    const [ state, setState] = useState ({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => setState({\n                data: imgs,\n                loading: false\n            }))\n    }, [  ]) \n\n\n    return state;\n}","import React, {useState} from 'react'\nimport AddCategory from '../AddCategory/AddCategory'\nimport GifGrid from '../GifGrid/GifGrid'\n\nconst GifExpertApp = props => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } /> \n             <hr />\n            \n                {                     \n                    categories.map( category => \n                       <GifGrid key={category} category={category}/>\n                    ) \n                }\n                \n            \n        </>\n    )\n}\n\n\n\nexport default GifExpertApp\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}